#!/bin/bash

BUILDER_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source ${BUILDER_DIR}/helpers

function debug()
{
    dotnet build /p:TargetFramework=netcoreapp3.1 \
    /p:GenerateFullPaths=true /p:Configuration=Debug /p:TrimUnusedDependencies=true \
    ${NERVA_DIR}/Src/Nerva.Toolkit/Nerva.Toolkit.Linux.csproj
}

function release()
{
    dotnet build /p:TargetFramework=netcoreapp3.1 \
    /p:GenerateFullPaths=true /p:Configuration=Release /p:TrimUnusedDependencies=true \
    ${NERVA_DIR}/Src/Nerva.Toolkit/Nerva.Toolkit.Linux.csproj
}

function publish()
{
    dotnet publish /p:TargetFramework=netcoreapp3.1 /p:Publish=true \
    /p:GenerateFullPaths=true /p:Configuration=Release /p:TrimUnusedDependencies=true \
    ${NERVA_DIR}/Src/Nerva.Toolkit/Nerva.Toolkit.Linux.csproj

	mkdir -p ${NERVA_DIR}/Bin/Publish
    cd ${NERVA_DIR}/Bin/Release/Linux/linux-x64/publish
	zip -r ${NERVA_DIR}/Bin/Publish/nerva-gui-v${NERVA_VERSION}_linux.zip ./Nerva.Toolkit
}

function mono()
{
    msbuild /t:restore /t:build /p:TargetFramework=net48 /p:OutputPath=${NERVA_DIR}/Bin/Release/Linux-mono \
    /p:GenerateFullPaths=true /p:Configuration=Release /p:TrimUnusedDependencies=true \
    ${NERVA_DIR}/Src/Nerva.Toolkit/Nerva.Toolkit.Linux.csproj

    find ${NERVA_DIR}/Bin/Release/Linux-mono -iname "*.pdb" | xargs rm -rf

    mkdir -p ${NERVA_DIR}/Bin/Publish
    cd ${NERVA_DIR}/Bin/Release/Linux-mono
	zip -r ${NERVA_DIR}/Bin/Publish/nerva-gui-v${NERVA_VERSION}_linux-mono.zip ./*
}

$1
