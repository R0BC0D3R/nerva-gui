#!/bin/bash -e

BUILDER_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source ${BUILDER_DIR}/helpers

function linux()
{
    dotnet publish /p:TargetFramework=netcoreapp3.1 /p:Publish=true /p:RuntimeIdentifier=linux-x64 \
    /p:GenerateFullPaths=true /p:Configuration=Release /p:TrimUnusedDependencies=true \
    /p:OutputPath=${NERVA_DIR}/Bin/Release/linux-x64/ ${NERVA_DIR}/Src/Nerva.Toolkit/Nerva.Toolkit.Linux.csproj

	mkdir -p ${NERVA_DIR}/Bin/Publish
    cd ${NERVA_DIR}/Bin/Release/linux-x64/publish
	zip -r ${NERVA_DIR}/Bin/Publish/nerva-gui-v${NERVA_VERSION}_linux.zip ./Nerva.Toolkit
}

function mac()
{
    dotnet publish /p:TargetFramework=netcoreapp3.1 /p:Publish=true /p:RuntimeIdentifier=osx-x64 \
    /p:GenerateFullPaths=true /p:Configuration=Release /p:TrimUnusedDependencies=true \
    /p:OutputPath=${NERVA_DIR}/Bin/Release/osx-x64/ ${NERVA_DIR}/Src/Nerva.Toolkit/Nerva.Toolkit.Mac.csproj

    bundle=${NERVA_DIR}/Bin/Release/osx-x64/Nerva.Toolkit.app
    mkdir -p ${bundle}/Contents
    mkdir -p ${bundle}/Contents/MacOS
    mkdir -p ${bundle}/Contents/Resources

    # Generate plist
    plist=$(sed -e "s/{NERVA_VERSION}/${NERVA_VERSION}/" -e "s/{DISPLAY_NAME}/${NERVA_CODENAME}/" ${BUILDER_DIR}/Info.plist.template)
    echo "$plist" > ${bundle}/Contents/Info.plist

    # Copy icons to resources
    cp ${BUILDER_DIR}/logos/nerva-logo-color.icns ${bundle}/Contents/Resources/nerva-logo-color.icns
    cp ${BUILDER_DIR}/logos/nerva-logo-color-2.icns ${bundle}/Contents/Resources/nerva-logo-color-2.icns

    # Copy launcher
    cp ${NERVA_DIR}/Bin/Release/osx-x64/publish/Nerva.Toolkit ${bundle}/Contents/MacOS/Nerva.Toolkit

	mkdir -p ${NERVA_DIR}/Bin/Publish
    cd ${NERVA_DIR}/Bin/Release/osx-x64
	zip -r ${NERVA_DIR}/Bin/Publish/nerva-gui-v${NERVA_VERSION}_osx.zip Nerva.Toolkit.app/
}

$1
